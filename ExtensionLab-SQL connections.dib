#!markdown

# .NET Interactive ExtensionLab: SQL Connections

This sample demonstrates how to use the `#!connect` extension.
[Orginal page](https://github.com/dotnet/interactive/blob/main/samples/ExtensionLab/ExtensionLab-SQL%20connections.dib)

#!csharp

#r "nuget:Microsoft.Data.Sqlite,3.1.7"

#!markdown

## Install our ExtensionLab NuGet package

#!csharp

#r "nuget:Microsoft.DotNet.Interactive.ExtensionLab, *-*"

#!markdown

Installing the `ExtensionLab` brings in some new magic commands including two additional verbs for the `#!connect` command, 

**Optional** you can see the command by running help for it.

#!csharp

#!lsmagic

#!csharp

#!connect sqlite -h

#!markdown

# Now, we're ready to work with a SQL database

SQLite allows us to create a database in memory using the `Mode=Memory` parameter in our connection string.    
This is a quick and convenient approach for the sake of demonstration.   
for example we can do `#!connect sqlite --kernel-name fruits "Data Source=InMemorySample;Mode=Memory;Cache=Shared" `     
and then 
```sql
#!fruits 

CREATE TABLE Fruits(
  Id    INTEGER PRIMARY KEY, 
  Name  TEXT NOT NULL,
  Color TEXT NOT NULL,
  Deliciousness INTEGER NOT NULL
);
````

**Note this seems to work in DIB but not ipnyb files at the moment**

#!csharp

#!connect sqlite --kernel-name collections "Data Source=C:\Users\mcp\AppData\Local\Temp\collectionsSQLite;"

#!csharp

#!collections 
SELECT name, type FROM sqlite_master 
WHERE type IN ('table','view') 
AND name NOT LIKE 'sqlite_%'
ORDER BY 1;

#!csharp

#!collections
 SELECT   count(parent_id), 
          collections.title as CollectionTitle 
 FROM                    collections_items_relationship 
 JOIN     items       ON collections_items_relationship.item_id = items.id  
 JOIN     collections ON collections_items_relationship.parent_id = collections.id
 GROUP BY collections.id
